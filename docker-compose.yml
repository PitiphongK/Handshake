version: "3.9"

services:
  frontend:
    build:
      context: .
      dockerfile: /frontend/Dockerfile
    depends_on:
      - backend
    networks:
      - hsnetwork

  backend:
    build:
      context: .
      dockerfile: ./handshake/Dockerfile
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles 
    env_file:
    - .env  
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
      - EMAIL_HOST_USER=${EMAIL_HOST_USER} 
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD} 
    depends_on:
      - db
    expose:
       - "8000"
    networks:
       - hsnetwork

  db:  # PostgreSQL
    build:  
      context: .   
      dockerfile: Dockerfile
    container_name: postgres-container
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}  
      - POSTGRES_DB=${POSTGRES_DB} 
      - POSTGRES_USER=${POSTGRES_USER}  
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks: 
       - hsnetwork

  certbot:  
    image: certbot/dns-cloudflare
    volumes:
      - ./nginx:/etc/nginx/conf.d  
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles 
      - letsencrypt_data:/etc/letsencrypt  
      - ./cloudflare.ini:/root/.secrets/cloudflare.ini:ro 
    command: certonly --dns-cloudflare --dns-cloudflare-credentials /root/.secrets/cloudflare.ini -d handshakescotland.uk -d www.handshakescotland.uk -d handshakescotland.co.uk -d www.handshakescotland.co.uk --non-interactive --agree-tos -m handshakescotland@gmail.com --keep-until-expiring
    networks:
        - hsnetwork
    depends_on:
      - nginx

  nginx:
    build: 
      context: ./nginx   
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d 
      - static_volume:/app/staticfiles 
      - media_volume:/app/mediafiles
      - ./frontend/dist:/usr/share/nginx/html
      - letsencrypt_data:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - hsnetwork

volumes:
  static_volume:
  media_volume:
  postgres_data:
  letsencrypt_data: 

networks:
  hsnetwork:
    driver: bridge